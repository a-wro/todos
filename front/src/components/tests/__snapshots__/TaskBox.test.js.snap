// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskBox Rendering renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskBox
    todos={
        Object {
            "tasks": Array [
              Object {
                "added": "2018-07-14",
                "completed": false,
                "id": 1,
                "task": "test",
              },
              Object {
                "added": "2018-07-14",
                "completed": false,
                "id": 2,
                "task": "test 2",
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TaskForm
          onChange={[Function]}
          onSubmit={[Function]}
          value=""
/>,
        <WithStyles(List)>
          <WithStyles(ListItem)>
                    <Connect(Todo)
                              completed={false}
                              id={1}
                              task="test"
                    />
          </WithStyles(ListItem)>
          <WithStyles(ListItem)>
                    <Connect(Todo)
                              completed={false}
                              id={2}
                              task="test 2"
                    />
          </WithStyles(ListItem)>
</WithStyles(List)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onChange": [Function],
          "onSubmit": [Function],
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(ListItem)>
              <Connect(Todo)
                            completed={false}
                            id={1}
                            task="test"
              />
</WithStyles(ListItem)>,
            <WithStyles(ListItem)>
              <Connect(Todo)
                            completed={false}
                            id={2}
                            task="test 2"
              />
</WithStyles(ListItem)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": <Connect(Todo)
                completed={false}
                id={1}
                task="test"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "completed": false,
                "id": 1,
                "task": "test",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "children": <Connect(Todo)
                completed={false}
                id={2}
                task="test 2"
/>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "completed": false,
                "id": 2,
                "task": "test 2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TaskForm
            onChange={[Function]}
            onSubmit={[Function]}
            value=""
/>,
          <WithStyles(List)>
            <WithStyles(ListItem)>
                        <Connect(Todo)
                                    completed={false}
                                    id={1}
                                    task="test"
                        />
            </WithStyles(ListItem)>
            <WithStyles(ListItem)>
                        <Connect(Todo)
                                    completed={false}
                                    id={2}
                                    task="test 2"
                        />
            </WithStyles(ListItem)>
</WithStyles(List)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [Function],
            "onSubmit": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(ListItem)>
                <Connect(Todo)
                                completed={false}
                                id={1}
                                task="test"
                />
</WithStyles(ListItem)>,
              <WithStyles(ListItem)>
                <Connect(Todo)
                                completed={false}
                                id={2}
                                task="test 2"
                />
</WithStyles(ListItem)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "class",
              "props": Object {
                "children": <Connect(Todo)
                  completed={false}
                  id={1}
                  task="test"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "completed": false,
                  "id": 1,
                  "task": "test",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "class",
              "props": Object {
                "children": <Connect(Todo)
                  completed={false}
                  id={2}
                  task="test 2"
/>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "completed": false,
                  "id": 2,
                  "task": "test 2",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskBox Rendering renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskBox
    todos={
        Object {
            "tasks": Array [
              Object {
                "added": "2018-07-14",
                "completed": false,
                "id": 1,
                "task": "test",
              },
              Object {
                "added": "2018-07-14",
                "completed": false,
                "id": 2,
                "task": "test 2",
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TaskForm />,
        <div>
          <div>
                    test
          </div>
          <div>
                    test 2
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              test
</div>,
            <div>
              test 2
</div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": "test 2",
            },
            "ref": null,
            "rendered": "test 2",
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TaskForm />,
          <div>
            <div>
                        test
            </div>
            <div>
                        test 2
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                test
</div>,
              <div>
                test 2
</div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": "test 2",
              },
              "ref": null,
              "rendered": "test 2",
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;

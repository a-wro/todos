// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskForm rendering renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskForm
    onChange={[Function]}
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "aria-labelledby": "form-dialog-title",
      "children": Array [
        <WithStyles(DialogTitle)
          id="form-dialog-title"
>
           a to-do
</WithStyles(DialogTitle)>,
        <WithStyles(DialogContent)>
          <form
                    className="task-form"
                    onSubmit={[Function]}
          >
                    <WithStyles(Input)
                              className="task-input"
                              onChange={[Function]}
                              placeholder="Edit"
                              type="text"
                              value={undefined}
                    />
          </form>
</WithStyles(DialogContent)>,
        <WithStyles(Button)
          onClick={[Function]}
          type="submit"
/>,
        <WithStyles(Button)
          onClick={undefined}
>
          Cancel
</WithStyles(Button)>,
      ],
      "onClose": undefined,
      "open": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            undefined,
            " a to-do",
          ],
          "id": "form-dialog-title",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          " a to-do",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            className="task-form"
            onSubmit={[Function]}
>
            <WithStyles(Input)
                        className="task-input"
                        onChange={[Function]}
                        placeholder="Edit"
                        type="text"
                        value={undefined}
            />
</form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(Input)
              className="task-input"
              onChange={[Function]}
              placeholder="Edit"
              type="text"
              value={undefined}
/>,
            "className": "task-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "task-input",
              "onChange": [Function],
              "placeholder": "Edit",
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "form",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": undefined,
          "onClick": [Function],
          "type": "submit",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Cancel",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "Cancel",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "aria-labelledby": "form-dialog-title",
        "children": Array [
          <WithStyles(DialogTitle)
            id="form-dialog-title"
>
             a to-do
</WithStyles(DialogTitle)>,
          <WithStyles(DialogContent)>
            <form
                        className="task-form"
                        onSubmit={[Function]}
            >
                        <WithStyles(Input)
                                    className="task-input"
                                    onChange={[Function]}
                                    placeholder="Edit"
                                    type="text"
                                    value={undefined}
                        />
            </form>
</WithStyles(DialogContent)>,
          <WithStyles(Button)
            onClick={[Function]}
            type="submit"
/>,
          <WithStyles(Button)
            onClick={undefined}
>
            Cancel
</WithStyles(Button)>,
        ],
        "onClose": undefined,
        "open": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              undefined,
              " a to-do",
            ],
            "id": "form-dialog-title",
          },
          "ref": null,
          "rendered": Array [
            undefined,
            " a to-do",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              className="task-form"
              onSubmit={[Function]}
>
              <WithStyles(Input)
                            className="task-input"
                            onChange={[Function]}
                            placeholder="Edit"
                            type="text"
                            value={undefined}
              />
</form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(Input)
                className="task-input"
                onChange={[Function]}
                placeholder="Edit"
                type="text"
                value={undefined}
/>,
              "className": "task-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "task-input",
                "onChange": [Function],
                "placeholder": "Edit",
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "form",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": undefined,
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Cancel",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "Cancel",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
